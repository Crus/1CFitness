////////////////////////////////////////////////////////////////////////////////
// Подсистема "Файловые функции".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// См. эту процедуру в модуле ФайловыеФункцииСлужебный.
Процедура ЗаписатьРезультатИзвлеченияТекста(ФайлИлиВерсияСсылка,
                                            РезультатИзвлечения,
                                            АдресВременногоХранилищаТекста) Экспорт
	
	ФайловыеФункцииСлужебный.ЗаписатьРезультатИзвлеченияТекста(
		ФайлИлиВерсияСсылка,
		РезультатИзвлечения,
		АдресВременногоХранилищаТекста);
	
КонецПроцедуры

// Только для внутреннего использования.
Процедура ПроверитьПодписи(ИсходныеДанные, ДанныеСтрок) Экспорт
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ЭлектроннаяПодпись") Тогда
		Возврат;
	КонецЕсли;
	МодульЭлектроннаяПодпись = ОбщегоНазначения.ОбщийМодуль("ЭлектроннаяПодпись");
	
	МенеджерКриптографии = МодульЭлектроннаяПодпись.МенеджерКриптографии("ПроверкаПодписи");
	
	Для каждого СтрокаПодписи Из ДанныеСтрок Цикл
		
		ОписаниеОшибки = "";
		ПодписьПроверена = МодульЭлектроннаяПодпись.ПроверитьПодпись(МенеджерКриптографии,
			ИсходныеДанные, СтрокаПодписи.АдресПодписи, ОписаниеОшибки);
		
		Если ПодписьПроверена Тогда
			СтрокаПодписи.Статус  = НСтр("ru = 'Верна'");
			СтрокаПодписи.Неверна = Ложь;
		Иначе
			СтрокаПодписи.Статус  = НСтр("ru = 'Неверна'") + ". " + ОписаниеОшибки;
			СтрокаПодписи.Неверна = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
